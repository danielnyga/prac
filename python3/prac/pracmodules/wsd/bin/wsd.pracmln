ccopy_reg
_reconstructor
p0
(cprac.core
PRACKnowledgeBase
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'learn_mln_str'
p6
S''
p7
sS'learn_params'
p8
(dp9
sS'query_params'
p10
(dp11
S'cwPreds'
p12
(lp13
sS'verbose'
p14
I00
sS'closedWorld'
p15
I1
sS'logic'
p16
S'FuzzyLogic'
p17
sS'queries'
p18
S'action_core, has_sense'
p19
sS'debug'
p20
S'ERROR'
p21
sS'useMultiCPU'
p22
I0
sS'method'
p23
S'WCSP'
p24
ssS'filename'
p25
NsS'query_mln_str'
p26
V/* **************************************************************************** \u000a * PROBABILISTIC ROBOT ACTION CORES -- ACTION CORE IDENTIFICATION\u000a * \u000a * (C) 2011-2013 by Daniel Nyga (nyga@cs.tum.edu)\u000a *\u000a * Permission is hereby granted, free of charge, to any person obtaining\u000a * a copy of this software and associated documentation files (the\u000a * "Software"), to deal in the Software without restriction, including\u000a * without limitation the rights to use, copy, modify, merge, publish,\u000a * distribute, sublicense, and/or sell copies of the Software, and to\u000a * permit persons to whom the Software is furnished to do so, subject to\u000a * the following conditions:\u000a *\u000a * The above copyright notice and this permission notice shall be\u000a * included in all copies or substantial portions of the Software.\u000a *\u000a * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\u000a * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\u000a * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\u000a * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\u000a * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\u000a * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\u000a * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\u000a ******************************************************************************/\u000a\u000a2 is_a(?s1,add.v.01) ^ is_a(?s2,milk.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, FluidFlowTranslation) ^ ?w1=/=?w2\u000a-5 is_a(?s1,add.v.04) ^ is_a(?s2,milk.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, FluidFlowTranslation) ^ ?w1=/=?w2\u000a-5 is_a(?s1,add.v.01) ^ is_a(?s2,one.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, DoingAddition) ^ ?w1=/=?w2\u000a1 is_a(?s1,add.v.04) ^ is_a(?s2,one.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, DoingAddition) ^ ?w1=/=?w2\u000a\u000a3 has_sense(?w1, ?s1) ^ is_a(?s1,fill.v.01) ^ action_core(?w1, FluidFlowTranslation)\u000a5 has_pos(?w, VB) ^ action_core(?w,?ac) ^ ?ac=/=null\u000a-15 !has_pos(?w, VB) ^ action_core(?w,?ac) ^ ?ac=/=null\u000a\u000a2 is_a(?s1,flip.v.08) ^ has_sense(?w1, ?s1) ^  action_core(?w1, Flipping) \u000a2 is_a(?s1,pour.v.01) ^ has_sense(?w1, ?s1) ^  action_core(?w1, FluidFlowTranslation) \u000a\u000a1 is_a(?s1,flip.v.08) ^ is_a(?s2,pancake.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, Flipping) ^ ?w1=/=?w2\u000a1 is_a(?s1,pour.v.01) ^ is_a(?s2,mix.n.01) ^ dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, FluidFlowTranslation) ^ ?w1=/=?w2\u000a1 is_a(?s1,pour.v.01) ^ is_a(?s2,cooker.n.01) ^ prep_into(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^  action_core(?w1, FluidFlowTranslation) ^ ?w1=/=?w2\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a
p27
sb.
